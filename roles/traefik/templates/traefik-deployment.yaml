apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik
  labels:
    app: traefik

spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: {{ traefik_image }}
          env:
          - name: CF_API_EMAIL
            valueFrom:
              secretKeyRef:
                name: traefik-secret
                key: cloudflare_email
          - name: CF_API_KEY
            valueFrom:
              secretKeyRef:
                name: traefik-secret
                key: cloudflare_token
          args:
            - "--entryPoints.web.address=:80"
            - "--entryPoints.websecure.address=:443"
            - "--api.dashboard=true"
            - "--providers.kubernetescrd"
            - "--certificatesResolvers.staging.acme.email={{ acme_email }}"
            - "--certificatesResolvers.staging.acme.storage=/data/staging.json"
            - "--certificatesResolvers.staging.acme.httpChallenge.entryPoint=web"
            - "--certificatesResolvers.staging.acme.caServer={{ acme_staging_url }}"
            - "--certificatesResolvers.staging.acme.dnsChallenge.provider=cloudflare"
            - "--certificatesResolvers.staging.acme.dnsChallenge.delayBeforeCheck=0"
            - "--certificatesResolvers.prod.acme.email={{ acme_email }}"
            - "--certificatesResolvers.prod.acme.storage=/data/prod.json"
            - "--certificatesResolvers.prod.acme.httpChallenge.entryPoint=web"
            - "--certificatesResolvers.prod.acme.caServer={{ acme_prod_url }}"
            - "--certificatesResolvers.prod.acme.dnsChallenge.provider=cloudflare"
            - "--certificatesResolvers.staging.acme.dnsChallenge.delayBeforeCheck=0"
            - "--entrypoints.websecure.http.tls.certResolver={{ cert_issuer }}"
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: admin
              containerPort: 8080
          volumeMounts:
          - name: traefik-storage
            mountPath: /data
      volumes:
        - name: traefik-storage
          persistentVolumeClaim:
            claimName: traefik-pv-claim
---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSOption
metadata:
  name: default
spec:
  minVersion: VersionTLS12
  sniStrict: true
  cipherSuites:
    - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
    - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_AES_128_GCM_SHA256
    - TLS_AES_256_GCM_SHA384
    - TLS_CHACHA20_POLY1305_SHA256
  curvePreferences:
    - CurveP521
    - CurveP384
---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSOption
metadata:
  name: mintls13
spec:
  sniStrict: true
  minVersion: VersionTLS13
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: traefik-pv-claim
  labels:
    app: traefik
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: "nfs-client"
  resources:
    requests:
      storage: 128Mi
